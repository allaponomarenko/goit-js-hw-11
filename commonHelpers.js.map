{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '44031619-a947df2c149ce3ba62f1c08d8'; // Замініть 'your-api-key' на ваш фактичний API ключ.\nconst BASE_URL = 'https://pixabay.com/api/';\n\nconst loader = document.getElementById('loader');\n\nexport async function fetchImages(query) {\n  try {\n    loader.style.display = 'block'; // Показуємо індикатор завантаження\n    const response = await axios.get(BASE_URL, {\n      params: {\n        key: API_KEY,\n        q: query,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: true,\n      },\n    });\n    return response.data.hits;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  } finally {\n    loader.style.display = 'none'; // Приховуємо індикатор завантаження\n  }\n}\n","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst gallery = document.querySelector('.gallery');\nlet lightbox;\n\nexport const renderImages = (images) => {\n  const markup = images\n    .map(\n      (image) => `\n        <div class=\"image-card\">\n          <a href=\"${image.largeImageURL}\" class=\"gallery-item\">\n            <img src=\"${image.webformatURL}\" alt=\"${image.tags}\" loading=\"lazy\" />\n          </a>\n          <div class=\"info\">\n            <p class=\"info_p\">\n              <span class=\"label\">Likes:</span>\n              <span class=\"value\">${image.likes}</span>\n            </p>\n            <p class=\"info_p\">\n              <span class=\"label\">Views:</span>\n              <span class=\"value\">${image.views}</span>\n            </p>\n            <p class=\"info_p\">\n              <span class=\"label\">Comments:</span>\n              <span class=\"value\">${image.comments}</span>\n            </p>\n            <p class=\"info_p\">\n              <span class=\"label\">Downloads:</span>\n              <span class=\"value\">${image.downloads}</span>\n            </p>\n          </div>\n        </div>`\n    )\n    .join('');\n  gallery.insertAdjacentHTML('beforeend', markup);\n  lightbox = new SimpleLightbox('.gallery-item');\n  lightbox.refresh();\n};\n\nexport const clearGallery = () => {\n  gallery.innerHTML = '';\n};\n","import { Spinner } from 'spin.js';\nimport { fetchImages } from './js/pixabay-api';\nimport { renderImages, clearGallery } from './js/render-functions';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst loader = document.getElementById('loader');\nconst opts = {\n  lines: 13, // The number of lines to draw\n  length: 38, // The length of each line\n  width: 17, // The line thickness\n  radius: 45, // The radius of the inner circle\n  scale: 1, // Scales overall size of the spinner\n  corners: 1, // Corner roundness (0..1)\n  speed: 1, // Rounds per second\n  rotate: 0, // The rotation offset\n  animation: 'spinner-line-fade-more', // The CSS animation name for the lines\n  direction: 1, // 1: clockwise, -1: counterclockwise\n  color: '#000', // CSS color or array of colors\n  fadeColor: 'transparent', // CSS color or array of colors\n  top: '50%', // Top position relative to parent\n  left: '50%', // Left position relative to parent\n  shadow: '0 0 1px transparent', // Box-shadow for the lines\n  zIndex: 2000000000, // The z-index (defaults to 2000000000)\n  className: 'spinner', // The CSS class to assign to the spinner\n  position: 'absolute', // Element positioning\n};\nconst spinner = new Spinner(opts);\n\nconst searchForm = document.querySelector('.search-form');\nconst gallery = document.querySelector('.gallery');\nlet lightbox;\n\nsearchForm.addEventListener('submit', async (event) => {\n  event.preventDefault();\n  const query = event.target.elements.query.value.trim();\n  if (!query) return;\n\n  clearGallery();\n\n  spinner.spin(loader);\n  try {\n    const images = await fetchImages(query);\n    renderImages(images);\n    lightbox = new SimpleLightbox('.gallery a', { /* options */ });\n  } catch (error) {\n    console.error(error);\n  } finally {\n    spinner.stop();\n  }\n});\n"],"names":["API_KEY","BASE_URL","loader","fetchImages","query","axios","error","gallery","lightbox","renderImages","images","markup","image","SimpleLightbox","clearGallery","opts","spinner","Spinner","searchForm","event"],"mappings":"owBAEA,MAAMA,EAAU,qCACVC,EAAW,2BAEXC,EAAS,SAAS,eAAe,QAAQ,EAExC,eAAeC,EAAYC,EAAO,CACvC,GAAI,CACFF,OAAAA,EAAO,MAAM,QAAU,SACN,MAAMG,EAAM,IAAIJ,EAAU,CACzC,OAAQ,CACN,IAAKD,EACL,EAAGI,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EACb,CACP,CAAK,GACe,KAAK,IACtB,OAAQE,EAAO,CACd,cAAQ,MAAMA,CAAK,EACbA,CACV,QAAY,CACRJ,EAAO,MAAM,QAAU,MACxB,CACH,CCvBA,MAAMK,EAAU,SAAS,cAAc,UAAU,EACjD,IAAIC,EAEG,MAAMC,EAAgBC,GAAW,CACtC,MAAMC,EAASD,EACZ,IACEE,GAAU;AAAA;AAAA,qBAEIA,EAAM,aAAa;AAAA,wBAChBA,EAAM,YAAY,UAAUA,EAAM,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,oCAK1BA,EAAM,KAAK;AAAA;AAAA;AAAA;AAAA,oCAIXA,EAAM,KAAK;AAAA;AAAA;AAAA;AAAA,oCAIXA,EAAM,QAAQ;AAAA;AAAA;AAAA;AAAA,oCAIdA,EAAM,SAAS;AAAA;AAAA;AAAA,eAI9C,EACA,KAAK,EAAE,EACVL,EAAQ,mBAAmB,YAAaI,CAAM,EAC9CH,EAAW,IAAIK,EAAe,eAAe,EAC7CL,EAAS,QAAO,CAClB,EAEaM,EAAe,IAAM,CAChCP,EAAQ,UAAY,EACtB,ECpCML,EAAS,SAAS,eAAe,QAAQ,EACzCa,EAAO,CACX,MAAO,GACP,OAAQ,GACR,MAAO,GACP,OAAQ,GACR,MAAO,EACP,QAAS,EACT,MAAO,EACP,OAAQ,EACR,UAAW,yBACX,UAAW,EACX,MAAO,OACP,UAAW,cACX,IAAK,MACL,KAAM,MACN,OAAQ,sBACR,OAAQ,IACR,UAAW,UACX,SAAU,UACZ,EACMC,EAAU,IAAIC,EAAQF,CAAI,EAE1BG,EAAa,SAAS,cAAc,cAAc,EACxC,SAAS,cAAc,UAAU,EACjD,IAAIV,EAEJU,EAAW,iBAAiB,SAAU,MAAOC,GAAU,CACrDA,EAAM,eAAc,EACpB,MAAMf,EAAQe,EAAM,OAAO,SAAS,MAAM,MAAM,OAChD,GAAKf,EAEL,CAAAU,IAEAE,EAAQ,KAAKd,CAAM,EACnB,GAAI,CACF,MAAMQ,EAAS,MAAMP,EAAYC,CAAK,EACtCK,EAAaC,CAAM,EACnBF,EAAW,IAAIK,EAAe,aAAc,CAAiB,CAAA,CAC9D,OAAQP,EAAO,CACd,QAAQ,MAAMA,CAAK,CACvB,QAAY,CACRU,EAAQ,KAAI,CACb,EACH,CAAC"}